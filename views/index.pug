extends layout

block content
    h1 Nic's Personal File Server


    input(class="input-file" type='file' name='fileUpload' id="fileUpload")
    label(for="fileUpload")
        div(class="add-file-icon-wrap")
            i(class="gg-file-add")

    div(class="file-list")
        each val in fileList
                div(class="file-flex")
                    if ["jpg", "png", "svg", "jpeg", "gif"].includes(val.split('.').pop().toLowerCase())
                        img(src=val class="file-thumbnail")
                        p= val
                        div(class="icon-wrap")
                            a(href=val download)
                                i(class="gg-software-download")
                        //div(class="icon-wrap")
                        //    a(href='/delete/')
                        //        i(class="gg-close")
                        input(type='button' value="X" id=val onclick="sendDeleteFile('" + val + "')")
                    else if !val.includes('.')
                        i(class="gg-folder folder-icon")
                        p= val
                        input(type="submit" value="X" id=val onclick="sendDeleteFolder('" + val + "')")
                    else
                        include file-icons
                        p= val
                        a(href=val download)
                            i(class="gg-software-download")
                        input(type='button' value="X" id=val onclick="sendDeleteFile('" + val + "')")


    input(type="hidden" name="currentFolder" id='current' value="Pictures")
    input(type='text' name='folderName' id='folderName')
    input(type='submit' onclick="sendNewFolder()")

    script.
        document.getElementById('fileUpload').addEventListener('change', event => {
            sendFileUpload(event);
        })

        function sendFileUpload(e) {
            const files = e.target.files;
            const formData = new FormData();
            formData.append('file', files[0]);

            uploadFile(formData).then(function (res) {
                if (res.status === 200) {
                    location.reload();
                }
            })
        }

        function sendDeleteFile(fileName) {
            deleteFile(fileName).then(function (res) {
                if (res.status === 200) {
                    location.reload();
                }
            })
        }

        function sendNewFolder() {
            // const current = document.getElementById('current').value;
            const folderName = document.getElementById('folderName').value;
            createFolder(folderName).then(function (res) {
                if (res.status === 200) {
                    location.reload();
                }
            })
        }

        function sendDeleteFolder(folderName) {
            deleteFolder(folderName).then(function (res) {
                if (res.status === 200) {
                    location.reload();
                }
            })
        }