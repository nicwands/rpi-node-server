{"version":3,"sources":["../app/index.js"],"names":["require","config","normalizePort","val","port","parseInt","isNaN","process","env","PORT","app","set","errorHandler","error","syscall","address","server","bind","code","console","exit","http","createServer","on","log","listen"],"mappings":";;AAAA;;AACA;;;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AAC3B,MAAMC,IAAI,GAAGC,QAAQ,CAACF,GAAD,EAAM,EAAN,CAArB;;AAEA,MAAIG,KAAK,CAACF,IAAD,CAAT,EAAiB;AACf,WAAOD,GAAP;AACD;;AACD,MAAIC,IAAI,IAAI,CAAZ,EAAe;AACb,WAAOA,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAVD;;AAYA,IAAMA,IAAI,GAAGF,aAAa,CAACK,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,MAArB,CAA1B;;AACAC,gBAAIC,GAAJ,CAAQ,MAAR,EAAgBP,IAAhB;;AAEA,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC5B,MAAIA,KAAK,CAACC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAMD,KAAN;AACD;;AACD,MAAME,OAAO,GAAGC,MAAM,CAACD,OAAP,EAAhB;AACA,MAAME,IAAI,GAAG,OAAOF,OAAP,KAAmB,QAAnB,GAA8B,UAAUA,OAAxC,GAAkD,WAAWX,IAA1E;;AACA,UAAQS,KAAK,CAACK,IAAd;AACE,SAAK,QAAL;AACEC,MAAAA,OAAO,CAACN,KAAR,CAAcI,IAAI,GAAG,gCAArB;AACAV,MAAAA,OAAO,CAACa,IAAR,CAAa,CAAb;AACA;;AACF,SAAK,YAAL;AACED,MAAAA,OAAO,CAACN,KAAR,CAAcI,IAAI,GAAG,qBAArB;AACAV,MAAAA,OAAO,CAACa,IAAR,CAAa,CAAb;AACA;;AACF;AACE,YAAMP,KAAN;AAVJ;AAYD,CAlBD;;AAoBA,IAAMG,MAAM,GAAGK,iBAAKC,YAAL,CAAkBZ,eAAlB,CAAf;;AAEAM,MAAM,CAACO,EAAP,CAAU,OAAV,EAAmBX,YAAnB;AACAI,MAAM,CAACO,EAAP,CAAU,WAAV,EAAuB,YAAM;AAC3B,MAAMR,OAAO,GAAGC,MAAM,CAACD,OAAP,EAAhB;AACA,MAAME,IAAI,GAAG,OAAOF,OAAP,KAAmB,QAAnB,GAA8B,UAAUA,OAAxC,GAAkD,UAAUX,IAAzE;AACAe,EAAAA,OAAO,CAACK,GAAR,CAAY,kBAAkBP,IAA9B;AACD,CAJD;AAMAD,MAAM,CAACS,MAAP,CAAcrB,IAAd,EAAoB,SAApB","sourcesContent":["import app from './app';\nimport http from 'http';\nrequire('dotenv').config();\n\nconst normalizePort = val => {\n  const port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    return val;\n  }\n  if (port >= 0) {\n    return port;\n  }\n  return false;\n};\n\nconst port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\nconst errorHandler = error => {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n  const address = server.address();\n  const bind = typeof address === 'string' ? 'pipe ' + address : 'port: ' + port;\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges.');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use.');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n};\n\nconst server = http.createServer(app);\n\nserver.on('error', errorHandler);\nserver.on('listening', () => {\n  const address = server.address();\n  const bind = typeof address === 'string' ? 'pipe ' + address : 'port ' + port;\n  console.log('Listening on ' + bind);\n});\n\nserver.listen(port, \"0.0.0.0\");\n"],"file":"index.js"}