{"version":3,"sources":["../app/app.js"],"names":["limiter","RateLimit","windowMs","max","delayMs","message","app","set","use","express","json","bodyParser","urlencoded","extended","origin","process","env","FRONT_URL","credentials","routes","req","res","next","err","locals","error","get","status","render"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AASA;;;;AAPA,IAAIA,OAAO,GAAG,IAAIC,4BAAJ,CAAc;AAC3BC,EAAAA,QAAQ,EAAE,KAAG,EAAH,GAAM,GADW;AAE3BC,EAAAA,GAAG,EAAE,GAFsB;AAG3BC,EAAAA,OAAO,EAAE,CAHkB;AAI3BC,EAAAA,OAAO,EAAE;AAJkB,CAAd,CAAd;AASA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACE,GAAJ,CAAQ,yBAAR;AACAF,GAAG,CAACE,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAF,GAAG,CAACE,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAJ,GAAG,CAACE,GAAJ,CAAQG,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAP,GAAG,CAACE,GAAJ,CAAQ,+BAAR;AACAF,GAAG,CAACE,GAAJ,CAAQC,8BAAe,SAAf,CAAR;AACAH,GAAG,CAACE,GAAJ,CAAQC,8BAAe,QAAf,CAAR;AACAH,GAAG,CAACE,GAAJ,CAAQ,sBAAK;AACZM,EAAAA,MAAM,EAAE,WACJC,OAAO,CAACC,GAAR,CAAYC,SADR,GAEP,wBAFO,EAGP,mBAHO,EAIP,wBAJO,CADI;AAOZC,EAAAA,WAAW,EAAE;AAPD,CAAL,CAAR;AASAZ,GAAG,CAACE,GAAJ,CAAQ,oCAAR;AACAF,GAAG,CAACE,GAAJ,CAAQR,OAAR,E,CAEA;;AACAM,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAaW,kBAAb,E,CAEA;;AACAb,GAAG,CAACE,GAAJ,CAAQ,UAASY,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChCA,EAAAA,IAAI,CAAC,4BAAY,GAAZ,CAAD,CAAJ;AACA,CAFD,E,CAIA;;AACAhB,GAAG,CAACE,GAAJ,CAAQ,UAASe,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACrC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWnB,OAAX,GAAqBkB,GAAG,CAAClB,OAAzB;AACAgB,EAAAA,GAAG,CAACG,MAAJ,CAAWC,KAAX,GAAmBL,GAAG,CAACd,GAAJ,CAAQoB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCH,GAAvC,GAA6C,EAAhE,CAHqC,CAKrC;;AACAF,EAAAA,GAAG,CAACM,MAAJ,CAAWJ,GAAG,CAACI,MAAJ,IAAc,GAAzB;AACAN,EAAAA,GAAG,CAACO,MAAJ,CAAW,OAAX;AACA,CARD;eAUetB,G","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport helmet from 'helmet';\nimport createError from 'http-errors';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport cors from 'cors';\nimport fileUpload from 'express-fileupload';\nimport RateLimit from 'express-rate-limit';\n\nlet limiter = new RateLimit({\n\twindowMs: 15*60*100,\n\tmax: 100,\n\tdelayMs: 0,\n\tmessage: 'Too many requests, please try again later'\n});\n\nimport routes from './routes';\n\nconst app = express();\n\napp.set('view engine', 'pug');\napp.use(helmet());\napp.use(logger('dev'));\napp.use(express.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(cookieParser());\napp.use(express.static('uploads'));\napp.use(express.static('public'));\napp.use(cors({\n\torigin: [\n\t\t`${process.env.FRONT_URL}`,\n\t\t'http://localhost:3000/',\n\t\t'http://10.0.0.79/',\n\t\t'http://10.0.0.79:3000/'\n\t],\n\tcredentials: true\n}));\napp.use(fileUpload());\napp.use(limiter);\n\n// Hook up all routes\napp.use('/', routes);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n\tnext(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n\t// set locals, only providing error in development\n\tres.locals.message = err.message;\n\tres.locals.error = req.app.get('env') === 'development' ? err : {};\n\n\t// render the error page\n\tres.status(err.status || 500);\n\tres.render('error');\n});\n\nexport default app;\n"],"file":"app.js"}