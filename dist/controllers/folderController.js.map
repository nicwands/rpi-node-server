{"version":3,"sources":["../../app/controllers/folderController.js"],"names":["createFolder","req","res","fullPath","appRoot","path","body","folderName","console","log","fs","mkdirSync","join","recursive","sendStatus","deleteFolder","folderPath","existsSync","readdirSync","forEach","file","index","curPath","lstatSync","isDirectory","deleteFolderRecursive","unlinkSync","rmdirSync"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,GAAN,EAAc;AACtC;AACA;AACA;AACA;AACA;AACA,MAAMC,QAAQ,GAAGC,wBAAQC,IAAR,GAAe,WAAf,GAA6BJ,GAAG,CAACK,IAAJ,CAASD,IAAtC,GAA6CJ,GAAG,CAACK,IAAJ,CAASC,UAAvE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,QAA9B;;AACAO,iBAAGC,SAAH,CAAaN,iBAAKO,IAAL,CAAUT,QAAV,CAAb,EAAkC;AAAEU,IAAAA,SAAS,EAAE;AAAb,GAAlC;;AACAX,EAAAA,GAAG,CAACY,UAAJ,CAAe,GAAf;AACH,CAVM;;;;AAYA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACd,GAAD,EAAMC,GAAN,EAAc;AACtCM,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,GAAG,CAACK,IAAJ,CAASC,UAAzC;AACA,MAAMS,UAAU,GAAGZ,wBAAQC,IAAR,GAAe,WAAf,GAA6BJ,GAAG,CAACK,IAAJ,CAASC,UAAzD;;AAEA,MAAIG,eAAGO,UAAH,CAAcD,UAAd,CAAJ,EAA+B;AAC3BN,mBAAGQ,WAAH,CAAeF,UAAf,EAA2BG,OAA3B,CAAmC,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChD,UAAMC,OAAO,GAAGjB,iBAAKO,IAAL,CAAUI,UAAV,EAAsBI,IAAtB,CAAhB;;AACA,UAAIV,eAAGa,SAAH,CAAaD,OAAb,EAAsBE,WAAtB,EAAJ,EAAyC;AAAE;AACvCC,QAAAA,qBAAqB,CAACH,OAAD,CAArB;AACH,OAFD,MAEO;AAAE;AACLZ,uBAAGgB,UAAH,CAAcJ,OAAd;AACH;AACJ,KAPD;;AAQAZ,mBAAGiB,SAAH,CAAaX,UAAb;;AACAd,IAAAA,GAAG,CAACY,UAAJ,CAAe,GAAf;AACH;AACJ,CAhBM","sourcesContent":["import path from \"path\";\nimport fs from 'fs';\nimport appRoot from 'app-root-path';\n\nexport const createFolder = (req, res) => {\n    // if (req.body.currentFolder.length > 0) {\n    //     const folderPath = path.join(appRoot.path, \"uploads/\", req.body.currentFolder, req.body.folderName);\n    //     console.log(folderPath);\n    //     fs.mkdirSync(folderPath, { recursive: true });\n    // }\n    const fullPath = appRoot.path + \"/uploads/\" + req.body.path + req.body.folderName;\n    console.log(\"adding folder \", fullPath);\n    fs.mkdirSync(path.join(fullPath), { recursive: true });\n    res.sendStatus(200);\n};\n\nexport const deleteFolder = (req, res) => {\n    console.log(\"removing folder \", req.body.folderName);\n    const folderPath = appRoot.path + \"/uploads/\" + req.body.folderName;\n\n    if (fs.existsSync(folderPath)) {\n        fs.readdirSync(folderPath).forEach((file, index) => {\n            const curPath = path.join(folderPath, file);\n            if (fs.lstatSync(curPath).isDirectory()) { // recurse\n                deleteFolderRecursive(curPath);\n            } else { // delete file\n                fs.unlinkSync(curPath);\n            }\n        });\n        fs.rmdirSync(folderPath);\n        res.sendStatus(200);\n    }\n};"],"file":"folderController.js"}